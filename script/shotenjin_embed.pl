#!/usr/bin/perl


use strict;
use File::Find::Rule;
use Path::Class;


my @files;

if (-d $ARGV[0]) {
    @files = File::Find::Rule->file->name('*.tj.js')->in($ARGV[0]);    
} elsif (-e $ARGV[0]) {
    @files = ( $ARGV[0] )
} else {
    die "Can't find input files to process, specify it as 1st argument\n(either single file or directory to scan for *.tj.js)\n"
}



my $GENERATED = '/* GENERATED BY SHOTENJIN.JOOSED HELPER, DO NOT MODIFY DIRECTLY */';
my $GENERATED_QUOTED = quotemeta $GENERATED;


foreach my $file (@files) {
    process_file($file)
}


sub process_file {
    my ($file) = @_;
    
    my $content = file($file)->slurp();
    
    my $content_copy = $content;
    
    pos $content = 0;
    
    while ($content =~ m!^((\s*)/\*tj(.*?)tj\*/(?:\s+$GENERATED_QUOTED\s+sources\s:\s'.*?'\s*$)?)!msg) {
        
        my $overall             = $1;
        my $overall_quoted      = quotemeta $overall;
        my $whitespace          = $2;
        
        my $template            = $3;
        
        my $escaped_template    = $template;
        
        $escaped_template       =~ s/^\s*(.*?)\s*$/$1/mg;
#        $escaped_template       =~ s/^[\t\f ]*(.*?)[\t\f ]*$/$1/mg;
        $escaped_template       =~ s!\\!\\\\!g;
        $escaped_template       =~ s/\r?\n/\\n/g;
        $escaped_template       =~ s/'/\\'/g;
        
        $content_copy =~ s!$overall_quoted!$whitespace/*tj${template}tj*/\n\n$whitespace$GENERATED\n${whitespace}sources : '$escaped_template'!ms;
    }
   
    if ($content ne $content_copy) {
        my $fh = file($file)->openw();
        print $fh $content_copy;
        $fh->close();
    }
}


