StartTest(function(t) {
    
    t.plan(1)
    
    var async0 = t.beginAsync()
    
    use('Shotenjin.Joosed', function () {
        
        //======================================================================================================================================================================================================================================================
        t.diag('Sanity')
        
        t.ok(Shotenjin.Joosed, "Shotenjin.Joosed is here")
        
        
        //======================================================================================================================================================================================================================================================
        t.diag('Template with capturing')

        Template('Test', {
            
            template : {
                /*tj
                    [%\
                        this.captureAs('fragment', function () {
                            for (var i = 1; i <= 5; i++) this.echo(i + ';')
                        })
                    %]
                        
                    Fragment1: [% this.getCapture('fragment') %]
                    Fragment2: [% this.getCapture('fragment') %]
                tj*/

                /* GENERATED BY SHOTENJIN.JOOSED HELPER, DO NOT MODIFY DIRECTLY */
                sources : '[%\\\nthis.captureAs(\'fragment\', function () {\nfor (var i = 1; i <= 5; i++) this.echo(i + \';\')\n})\n%]\nFragment1: [% this.getCapture(\'fragment\') %]\nFragment2: [% this.getCapture(\'fragment\') %]'
            }
        
        
        })

        //======================================================================================================================================================================================================================================================
        t.diag('Rendering')
        
        t.ok(Test() == 'Fragment1: 1;2;3;4;5;\nFragment2: 1;2;3;4;5;', 'Capturing works correctly')

        t.endAsync(async0)
    })
})    
